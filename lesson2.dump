db.teacher.aggregate([
    {
        $group:
            {
                _id: '$lesson',
                countLesson: {$sum: 1},
                min: {$min: '$payment'},
                max: {$max: '$payment'},
                avg: {$avg: '$payment'},
                sum: {$sum: '$payment'}
            }

    }
])

//
db.teacher.aggregate([
    {
        $group: {
            _id: '$lesson',
            lessonCount: {$sum: 1}
        }
    },
    {
        $sort: {
            lessonCount: 1
        }
    },
    {
        $addFields: {
            lesson: '$_id'
        }
    },
    {
        $project: {
            _id: 0
        }
    }
]);


//поєднування колекцій і робота з ними
db.teacher.aggregate([
    {
        $lookup: {
            from: 'students',
            localField: 'class_curator',
            foreignField: 'class',
            as: 'myStudents'
        }
    },
    // {
    //     $sort: {'class_curator': 1}
    // },
    // {
    //     $limit: 2
    // },
    // {
    //     $skip: 1
    // }
    {
        // $match: {'myStudents.name': 'Ivan'}
        $match: {'myStudents.parents.profession': 'teacher'}
    }
]);


// тут краще спочатку знайти, а потім об'єднати
// це менше навантажує server
db.teacher.aggregate([

    {
        $match: {class_curator: {$gt: 5}}
    },
    {
        $lookup: {
            from: 'students',
            localField: 'class_curator',
            foreignField: 'class',
            as: 'myStudents'
        }
    },
    {
        $sort: {class_curator:1}

    },
    {
        $unwind: '$myStudents'
    },
    {
        $unwind: '$myStudents.parents'
    },
    {
        $match: {'myStudents.parents.profession': 'doctor'}
    },
    {
        $count: 'DoctorCount'
    }

]);


db.teacher.find();
db.students.find();